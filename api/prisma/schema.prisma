generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SYSTEM_ADMIN
  MANAGER
  GENERAL_EMPLOYEE
}

enum InvitationStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model User {
  id                  String         @id @default(uuid())
  email               String         @unique
  password            String
  role                Role
  profile             Profile?
  companies           CompanyUser[]
  invitationsSent     Invitation[]   @relation("sentInvitations")
  invitationsReceived Invitation[]   @relation("receivedInvitations")
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  isActive           Boolean        @default(true)
}

model Profile {
  id             String   @id @default(uuid())
  employeeNumber String   @unique
  department     String
  firstName      String
  lastName       String
  zipCode        String
  address        String
  phoneNumber    String
  birthday       DateTime
  remarks        String?
  profileImage   String?
  user           User     @relation(fields: [userId], references: [id])
  userId         String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Company {
  id                String        @id @default(uuid())
  name              String
  zipCode           String
  address           String
  phoneNumber       String
  email             String
  website           String?
  establishmentDate DateTime
  remarks           String?
  images            String[]
  users             CompanyUser[]
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  Invitation        Invitation[]
}

model CompanyUser {
  id        String   @id @default(uuid())
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())

  @@unique([companyId, userId])
}

model Invitation {
  id            String           @id @default(uuid())
  email         String
  token         String           @unique
  role          Role
  status        InvitationStatus @default(PENDING)
  expiresAt     DateTime
  invitedBy     User             @relation("sentInvitations", fields: [invitedById], references: [id])
  invitedById   String
  invitedUser   User?            @relation("receivedInvitations", fields: [invitedUserId], references: [id])
  invitedUserId String?
  company       Company          @relation(fields: [companyId], references: [id])
  companyId     String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}
